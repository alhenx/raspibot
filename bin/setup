#!/bin/sh

# Raspibot's setup script.
# Raúl Díez Sánchez - Alejandro Chacón Peregrino.

INSTALLDIR="/opt/raspibot-setup"
BOTPATH="$INSTALLDIR/raspibot"
BOTPATH_BAK="$BOTPATH-bak"
TORRENTENDPATH="/opt/torrentsend"
TORRENTSFILE="$TORRENTENDPATH/torrentsended"
AMBILIGHT="boblight-dispmanx"
TORRENTALERTSCRIPT="/usr/bin/torrent-finished.sh"
RASPIBOTSYSCTL_FILE="/usr/local/bin/raspibotsysctl"
RASPIBOT_SERVICE="raspibot.service"
SYS_USER=$(echo $USER)
TORRENTSERVICESETTINGS="/var/lib/transmission-daemon/.config/transmission-daemon/settings.json"

function update_bot {
	cd # Va a /home/$SYS_USER
	mv $BOTPATH $BOTPATH_BAK
	git clone https://github.com/alhenx/raspibot.git $BOTPATH --quiet

	echo "Configurando nueva versión..."
	cp -r $BOTPATH_BAK/config $BOTPATH
	cp -r $BOTPATH_BAK/tmp $BOTPATH
	touch $BOTPATH/tmp/update
	echo "Eliminando versiones anteriores..."
	rm -rf $BOTPATH_BAK
	if [ ! -f $BOTPATH/config/torrentuser ] ; then
		echo -e "\nComprobando si cuenta con transmission-daemon en el sistema..."
		if (eval sudo apt-cache policy transmission-daemon >/dev/null 2>&1) ; then
			echo "Se ha detectado transmission-daemon instalado en el sistema."

				if (eval sudo apt-cache policy transmission-cli >/dev/null 2>&1) ; then
					sudo apt-get install -y transmission-cli >/dev/null
				fi
			fi

			echo "A continuación es necesario introducir el usuario y contraseña"
			echo "del servicio para transmission-daemon web. Introduzca su usuario:"
			read TORRENTUSER

			echo -e "\nIntroduzca la contraseña:"
			read TORRENTPASS

			echo "Se añadirá este servicio a la lista de alertas de RaspiBot."

			sudo sed -i 's^"script-torrent-done-enabled": false,^"script-torrent-done-enabled": true,^g' $TORRENTSERVICESETTINGS
			sudo sed -i 's^"script-torrent-done-filename": "",^"script-torrent-done-filename": "'"$TORRENTALERTSCRIPT"'",^g' $TORRENTSERVICESETTINGS

			echo -e '#!/bin/sh' | sudo tee $TORRENTALERTSCRIPT >/dev/null
			echo -e 'torrentsalertfile="'"$TORRENTSFILE"'"' | sudo tee --append $TORRENTALERTSCRIPT >/dev/null
			echo -e 'echo $TR_TORRENT_NAME > $torrentsalertfile' | sudo tee --append $TORRENTALERTSCRIPT >/dev/null
			echo -e "exit 0" | sudo tee --append $TORRENTALERTSCRIPT >/dev/null

			sudo /usr/bin/systemctl reload transmission-daemon

			sudo chmod a+x $TORRENTALERTSCRIPT
			echo -n $TORRENTUSER > $BOTPATH/config/torrentuser
			echo -n $TORRENTPASS > $BOTPATH/config/torrentpass
		fi
	fi
	if [ ! -f $RASPIBOTSYSCTL_FILE ] ; then
		sudo ln -s $BOTPATH/bin/raspibotsysctl $RASPIBOTSYSCTL_FILE
	fi
	raspibot restart
	echo "Actualización completada."
}
######################
#END update_bot

KEEPON=true

while $KEEPON ;
do
	echo -e "**************************************************"
	echo -e "********* INSTALADOR OFICIAL DE RASPIBOT *********"
	echo -e "**************************************************"
	echo -e "Introduzca el número de la opción deseada del programa:\n"
	echo -e "\t1. Instalación de RaspiBot."
	echo -e "\t2. Actualización de RaspiBot."
	echo -e "\t3. Desinstalación de RaspiBot."
	echo -e "\t4. Salir."
	read X
		case $X in
			1)
				echo "******* INSTALACIÓN SELECCIONADA *******"

				echo "Comenzando proceso de instalación..."
				cd # Va a /home/$SYS_USER
				echo "Sincronizando las bases de datos de los paquetes..."
				eval sudo apt-get update >/dev/null

				echo "Comprobando paquetes necesarios del sistema."
				PY_PKG="python"
				PIP_PKG="python-pip"
				if !(eval sudo apt-cache policy $PY_PKG >/dev/null 2>&1) ; then
					echo "Instalando $PY_PKG..."
					eval sudo apt-get install -y $PY_PKG >/dev/null
				fi

				if !(eval sudo apt-cache policy $PIP_PKG >/dev/null 2>&1) ; then
					echo "Instalando $PIP_PKG..."
					eval sudo apt-get install -y $PIP_PKG >/dev/null
				fi

				echo "Comprobando módulos pip."
				PIPMODULES[0]=pyTelegramBotAPI
				PIPMODULES[1]=wikipedia
				PIPMODULES[2]=feedparser

				for (( i=0; i<${#PIPMODULES[@]}; i++ ))
				do
					if ! pip list | grep ${PIPMODULES[$i]} >/dev/null ; then
						echo "Instalando módulo ${PIPMODULES[$i]}..."
						sudo pip install ${PIPMODULES[$i]} >/dev/null
					fi
				done

				echo "Creando directorios necesarios para la instalación..."
				sudo mkdir -p $INSTALLDIR
				sudo mkdir -p $TORRENTENDPATH
				sudo chmod a+wx $INSTALLDIR
				sudo chmod a+wx $TORRENTENDPATH

				echo "Instalando RaspiBot..."
				git clone https://github.com/alhenx/raspibot.git $BOTPATH --quiet

				echo "A continuación se configurarán algunos archivos..."
				mkdir $BOTPATH/tmp

				TOKEN_BOT_FILE=
				while [[ $TOKEN_BOT_FILE == "" ]]; do
					echo "Por favor, introduzca el API_TOKEN (no puede dejarse en blanco)"
					echo "de su Bot (se la facilitará @BotFather al crear su Bot):"
					read TOKEN_BOT_FILE
				done

				CHAT_ID_FILE=
				while [[ $CHAT_ID_FILE == "" ]]; do
					echo -e "\nPor favor, introduzca su CHAT_ID (no puede dejarse en blanco)."
					echo "Si no tiene uno, o no lo recuerda, póngase en contacto con @CabashiBot"
					echo "mediante Telegram, y envíele el comando '/chatid' (sin las comillas)."
					read CHAT_ID_FILE
				done

				echo -e "\nComprobando si cuenta con $AMBILIGHT en el sistema..."
				AMBI_PATH_FILE=$(find / -type f -name $AMBILIGHT 2>&1 | grep -v 'find:')

				mkdir $BOTPATH/config

				echo -n $TOKEN_BOT_FILE > $BOTPATH/config/token_bot
				echo -n $CHAT_ID_FILE > $BOTPATH/config/chat_id

				if [ $(echo $AMBI_PATH_FILE | wc -l) == 1 -a $(echo $AMBI_PATH_FILE) != "" ] ; then
					echo -n $AMBI_PATH_FILE > $BOTPATH/config/ambi_path
				else
					echo -n "NOPE" > $BOTPATH/config/ambi_path
				fi

				sudo chmod 444 $BOTPATH/config/*

				echo -e "\nComprobando si cuenta con transmission-daemon en el sistema..."
				if (eval sudo apt-cache policy transmission-daemon >/dev/null 2>&1) ; then
					echo "Se ha detectado transmission-daemon instalado en el sistema."

					if !(eval sudo apt-cache policy transmission-cli >/dev/null 2>&1) ; then
						sudo apt-get install -y transmission-cli >/dev/null
					fi

					echo "A continuación es necesario introducir el usuario y contraseña"
					echo "del servicio para transmission-daemon web. Introduzca su usuario:"
					read TORRENTUSER

					echo -e "\nIntroduzca la contraseña:"
					read TORRENTPASS

					echo "Se añadirá este servicio a la lista de alertas de RaspiBot."

					sudo sed -i 's^"script-torrent-done-enabled": false,^"script-torrent-done-enabled": true,^g' $TORRENTSERVICESETTINGS
  				sudo sed -i 's^"script-torrent-done-filename": "",^"script-torrent-done-filename": "'"$TORRENTALERTSCRIPT"'",^g' $TORRENTSERVICESETTINGS

  				echo -e '#!/bin/sh' | sudo tee $TORRENTALERTSCRIPT >/dev/null
  				echo -e 'torrentsalertfile="'"$TORRENTSFILE"'"' | sudo tee --append $TORRENTALERTSCRIPT >/dev/null
  				echo -e 'echo $TR_TORRENT_NAME > $torrentsalertfile' | sudo tee --append $TORRENTALERTSCRIPT >/dev/null
  				echo -e "exit 0" | sudo tee --append $TORRENTALERTSCRIPT >/dev/null

  				sudo /usr/bin/systemctl reload transmission-daemon

  				sudo chmod a+x $TORRENTALERTSCRIPT
  				echo -n $TORRENTUSER > $BOTPATH/config/torrentuser
					echo -n $TORRENTPASS > $BOTPATH/config/torrentpass
				fi

				sudo ln -s $BOTPATH/bin/raspibot /bin/raspibot

				echo "[Unit]" > $BOTPATH/$RASPIBOT_SERVICE
				echo "Description=RaspiBot for Telegram" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "[Service]" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "User=$SYS_USER" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "Type=oneshot" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "ExecStart=/bin/raspibot exec" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "TimeoutSec=0" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "RemainAfterExit=yes" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "[Install]" >> $BOTPATH/$RASPIBOT_SERVICE
				echo "WantedBy=multi-user.target" >> $BOTPATH/$RASPIBOT_SERVICE

				sudo mv $BOTPATH/$RASPIBOT_SERVICE $SYSTEMD_DIR

				sudo /usr/bin/systemctl enable $RASPIBOT_SERVICE

				sudo /usr/bin/systemctl start $RASPIBOT_SERVICE

				echo -e "\nSe ha creado, activado e iniciado el servicio 'raspibot'."
				echo "Puede consultar su estado con 'raspibot status'. Para ver más opciones,"
				echo "utilice 'raspibot help'."

				#FALTA DAR PERMISO EN SUDOERS AL RASPIBOTSYSCTL_FILE PARA EJECUTARSE CON USER SIN PASS EN SUDO.

				echo "Proceso de instalación completado. RaspiBot instalado."
				KEEPON=false
			;;
			### END CASE 1
			2)
				echo "******* ACTUALIZACIÓN SELECCIONADA *******"
				echo "Comprobando actualizaciones..."
				LOCALVERSION=$(cat $BOTPATH/version)
				REMOTEVERSION=$(curl -s https://raw.githubusercontent.com/alhenx/raspibot/master/version)
				if [ "$LOCALVERSION" != "$REMOTEVERSION" ]; then
					echo "Existe una nueva versión de RaspiBot. Actualizando..."
					update_bot # Utiliza la función update_bot.
				else
					echo "No hay actualizaciones disponibles para RaspiBot."
				fi
				KEEPON=false
			;;
			### END CASE 2
			3)
				echo "******* DESINSTALACIÓN SELECCIONADA *******"
				echo "Comenzando proceso de desinstalación..."
				cd # Va a /home/$SYS_USER

				sudo rm -rf $INSTALLDIR >/dev/null 2>&1
				sudo rm -rf $TORRENTENDPATH > /dev/null 2>&1
				sudo /usr/bin/systemctl stop $RASPIBOT_SERVICE >/dev/null 2>&1
				sudo /usr/bin/systemctl disable $RASPIBOT_SERVICE >/dev/null 2>&1
				sudo rm -f /lib/systemd/system/$RASPIBOT_SERVICE >/dev/null 2>&1
				sudo rm -f /bin/raspibot >/dev/null 2>&1
				echo "Desinstalación completada."
				KEEPON=false
			;;
			### END CASE 3
			4)
				KEEPON=false
				echo "Saliendo..."
			;;
			*)
				echo "La opción seleccionada no es válida."
			;;
		esac
done

#end
